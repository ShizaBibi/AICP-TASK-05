# Initialize the board and player symbols
board = [' ' for _ in range(9)]
player1, player2 = 'X', 'O'

# Function to display the board
def show_board():
    print('\n')
    for i in range(3):
        for j in range(3):
            print(f'| {board[i*3 + j]} |', end='')
        print('\n')

# Function to check for a winner
def check_winner(symbol):
    # Check rows
    for i in range(3):
        if all(board[3*i + j] == symbol for j in range(3)):
            return True

    # Check columns
    for i in range(3):
        if all(board[i + 3*j] == symbol for j in range(3)):
            return True

    # Check diagonals
    return (
        (board[0] == symbol and board[4] == symbol and board[8] == symbol) or
        (board[2] == symbol and board[4] == symbol and board[6] == symbol)
    )

# Main game loop
current_player = player1
while True:
    # Show the board
    show_board()

    # Get player's move
    while True:
        try:
            move = int(input(f"Player '{current_player}', enter your move (1-9): "))
        except ValueError:
            print("Invalid move. Please enter a number between 1 and 9.")
            continue

        if 1 <= move <= 9 and board[move - 1] == ' ':
            break
        print("This space is already occupied. Please choose another one.")

    # Update board and check for winner
    board[move - 1] = current_player
    winner = check_winner(current_player)

    # Check for winner or draw
    if winner:
        show_board()
        print(f"Player '{current_player}' wins!")
        break

    if ' ' not in board:
        show_board()
        print("It's a draw!")
        break

    # Switch players
    current_player = player2 if current_player == player1 else player1
    

 # Ask to play again
    play_again = input("Do you want to play again (y/n)? ").lower()
    if play_again == 'y':
        # Continue to the next iteration of the loop
        continue
    else:
        print("Thanks for playing!")
        # Exit the loop and end the program
        break
